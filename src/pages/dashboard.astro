---
import { ArrowDownRightIcon, ArrowRightIcon, ExclamationTriangleIcon } from "@heroicons/react/24/outline";
import Base from "../layout/Base.astro";
import DocumentLayout from "../layout/DocumentLayout.astro";
import { supabase } from "../lib/supabase";

const { user } = Astro.locals;

const { data, error } = await supabase
  .from("content_access")
  .select("content:content_id(*)")
  .eq("user_id", user.id);

if (error) {
  console.error("Error al obtener contenido:", error.message);
}

const ebooks = [
  {
    slug: "el-abc-del-entrenamiento",
    title: "Ebook-EntrenamientoSTP",
    image: "/ebookImage.png",
    description: "Una guía para entrenar con sentido",
    type: 'EBOOK_FUNCTIONALTRAINER',
    rotate: true,
  },
  {
    slug: "los-basicos",
    title: "Manual Los Básicos",
    image: "/portadaLosBasicos.png",
    description: "Sobre los que se construyen el rendimiento, la fuerza y la longevidad",
    type: 'THE_BASICS_MANUAL',
    rotate: false,
  },
];

const userContentTypes = (data ?? [])
  .map(entry => entry.content?.type)
  .filter(Boolean);

const filteredEbooks = ebooks.filter(ebook =>
  userContentTypes.includes(ebook.type)
);
---
<DocumentLayout title="Entrenamiento STP | Dashboard">
  <Base >
    <section class="h-full" style="background-image: url('/signinImg.png');">
      <div class="relative mx-auto px-8 max-w-7xl py-12 md:px-12">
        <h1 class="text-3xl font-bold mb-6">Biblioteca STP</h1>
        {
          filteredEbooks.length === 0 ? (
            <div class="border-1 rounded-xl p-6 shadow hover:shadow-lg transition duration-200 flex flex-col justify-between items-center space-y-2">
              <ExclamationTriangleIcon height={50} />
              <p>Lo sentimos no tenes contenido disponible por el momento</p>
              <p>Contactá con ventas para conseguir tu acceso</p>
              <a
            href="https://wa.me/543815654293"
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center text-primary py-3 px-5 rounded mb-4 text-lg transition-all"
          >
            <img src='wsspIcon.png' alt='whatsapp' class='h-[30px] mr-3' />
            Whatsapp
          </a>
            </div>
          ) : (
            <>
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredEbooks.map(ebook => (
                  <div class="border rounded-xl p-6 shadow hover:shadow-lg transition duration-200 flex flex-col justify-between max-w-[350px]">
                    <div>
                      <img class={`h-64 ${ebook.rotate ? '-rotate-[0.5rad]' : 'mb-3'}`} src={ebook.image} alt="Portada del Ebook" />
                      <h2 class="text-xl font-semibold mb-2">{ebook.title}</h2>
                      <p class="text-gray-600 mb-4">{ebook.description}</p>
                    </div>
                    <a
                      href={`/books/${ebook.slug}`}
                      class="mt-auto inline-block bg-primary text-white px-4 py-2 rounded hover:bg-blue-700 flex items-center justify-between"
                    >
                      Leer
                      <ArrowRightIcon height={20} />
                    </a>
                  </div>
                ))}
              </div>
            </>
          )
        }
      </div>
    </section>
  </Base>

</DocumentLayout>